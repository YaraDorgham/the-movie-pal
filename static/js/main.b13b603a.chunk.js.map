{"version":3,"sources":["api/the-movie-db.js","Popup.js","MovieDetail.js","MovieList.js","firebase.js","SearchList.js","SearchBar.js","Header.js","Spinner.js","App.js","index.js"],"names":["axios","create","baseURL","params","api_key","Popup","movieID","fullscreenpopup","close","history","useHistory","useState","movie","setMovie","fullscreen","setFullscreen","useEffect","a","movieDB","get","response","data","fetchData","className","onClick","goBack","length","original_title","src","poster_path","alt","overview","MovieDetail","id","title","description","genres","rating","imgPath","playNow","showPopup","setShowpopup","path","Button","push","MovieList","movies","genreList","allmovies","map","movieGenre","genre_ids","idgenre","type","find","element","name","vote_average","fireDb","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SearchList","Quicksearch","searchHistory","Array","from","search","SearchBar","onSubmit","term","setTerm","setSearchHistory","moviesRef","firestore","collection","getSearchHistory","fetchSearchHistory","addSearch","obj","add","created","Date","terms","orderBy","limit","forEach","doc","event","preventDefault","value","onChange","e","target","trial","Header","Spinner","App","setMovies","searchMovies","setSearchMovies","setGenres","results","slice","genresResponse","onSearchSubmit","query","exact","render","match","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.b13b603a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst api_key = \"78da18deb28f6efe0113be955d928e99\";\r\nexport default axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n\r\n  params: { api_key: api_key },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"./Popup.css\";\r\nimport movieDB from \"./api/the-movie-db\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Popup = ({ movieID, fullscreenpopup, close }) => {\r\n  const history = useHistory();\r\n  const [movie, setMovie] = useState([]);\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setFullscreen(fullscreenpopup);\r\n    async function fetchData() {\r\n      const response = await movieDB.get(\"/movie/\" + movieID);\r\n      setMovie(response.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const closepopup = () => {\r\n    if (fullscreenpopup == true) {\r\n      history.goBack();\r\n    } else {\r\n      {\r\n        close();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={fullscreen === false ? \"popup\" : \"popupfull\"}>\r\n      <div className=\"popup\\_inner\">\r\n        <button className=\"close\" onClick={closepopup}>\r\n          X\r\n        </button>\r\n        {movie.length == 0 ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <h1>{movie.original_title}</h1>\r\n            <div className=\"popuprow\">\r\n              <img\r\n                className=\"popupimg\"\r\n                src={\"https://image.tmdb.org/t/p/w200/\" + movie.poster_path}\r\n                alt=\"\"\r\n              ></img>\r\n              <p className=\"description\">{movie.overview}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React, { useState } from \"react\";\r\nimport \"./MovieDetail.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"./Popup\";\r\nconst MovieDetail = ({\r\n  id,\r\n  title,\r\n  description,\r\n  genres,\r\n  rating,\r\n  imgPath,\r\n  playNow,\r\n}) => {\r\n  const [showPopup, setShowpopup] = useState(false);\r\n  const history = useHistory();\r\n  const handleShow = () => {\r\n    if (playNow == false) {\r\n      history.push(`/movie/${id}`);\r\n    } else {\r\n      setShowpopup(true);\r\n    }\r\n  };\r\n\r\n  const path = \"https://image.tmdb.org/t/p/w200/\" + imgPath;\r\n\r\n  const closepopup = () => {\r\n    setShowpopup(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      <h3>{rating}</h3>\r\n      <h4>{genres}</h4>\r\n      <div className=\"box\">\r\n        <img src={path} alt=\"\" />\r\n        <p>{description}</p>\r\n      </div>\r\n      <Button className=\"ButtonView\" onClick={handleShow}>\r\n        {\" \"}\r\n        View More\r\n      </Button>\r\n      {showPopup == true ? (\r\n        <Popup movieID={id} fullscreenpopup={false} close={closepopup} />\r\n      ) : null}\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\nexport default MovieDetail;\r\n","import React from \"react\";\r\nimport MovieDetail from \"./MovieDetail\";\r\n\r\nconst MovieList = ({ movies, genreList, playNow }) => {\r\n  const allmovies = movies.map((movie) => {\r\n    const movieGenre = movie.genre_ids.map((idgenre) => {\r\n      const type = genreList.find((element) => element.id == idgenre);\r\n      return <div>{type.name}</div>;\r\n    });\r\n\r\n    return (\r\n      <MovieDetail\r\n        key={movie.poster_path}\r\n        id={movie.id}\r\n        title={movie.original_title}\r\n        description={movie.overview}\r\n        genres={movieGenre}\r\n        rating={movie.vote_average}\r\n        imgPath={movie.poster_path}\r\n        playNow={playNow}\r\n      />\r\n    );\r\n  });\r\n  return <div>{allmovies}</div>;\r\n};\r\n\r\nexport default MovieList;\r\n","import firebase from \"firebase\"; \r\n \r\n var firebaseConfig =  {\r\n    apiKey: \"AIzaSyBGcqsSwamMYXl1C95KOdfhSkb9bMsViFM\",\r\n    authDomain: \"the-movie-pal.firebaseapp.com\",\r\n    projectId: \"the-movie-pal\",\r\n    storageBucket: \"the-movie-pal.appspot.com\",\r\n    messagingSenderId: \"679129437307\",\r\n    appId: \"1:679129437307:web:37ce1430bec07a31b5fede\"\r\n  };\r\n\r\n  var fireDb = firebase.initializeApp(firebaseConfig);  \r\n  \r\nexport default fireDb;  ","import React from 'react';\r\nimport './searchList.css';\r\n\r\nconst SearchList =({Quicksearch,searchHistory})=>{\r\n    const data = Array.from(searchHistory);\r\n    const history=data.map((search)=>{\r\n        return( \r\n        <span>\r\n        <label className=\"searchHistory\" key={search} onClick={()=>Quicksearch(search)}>{`${search} `}</label>\r\n        </span>\r\n        );\r\n    });\r\n    return <div className=\"alignHorz\">{history}</div>;\r\n};\r\n\r\nexport default SearchList;","import React, { useState,useEffect } from 'react';\r\nimport './SearchBar.css';\r\nimport firebase from \"./firebase\";\r\nimport SearchList from './SearchList';\r\nimport { Spinner } from 'react-bootstrap';\r\nconst SearchBar =({onSubmit})=>{\r\n    const [term,setTerm]=useState('');\r\n    const [searchHistory,setSearchHistory]=useState([]);\r\n    var moviesRef = firebase.firestore().collection(\"moviesearch\"); \r\n    var data=[];\r\n    var searchTerms=[];\r\n    const onFormSubmit= (event)=>{\r\n        event.preventDefault();\r\n        onSubmit(term);\r\n        addSearch(term);\r\n    };\r\n\r\n\r\n    useEffect( ()=>{\r\n\r\n        const fetchSearchHistory=async()=>{\r\n            await getSearchHistory();\r\n        }\r\n        \r\n        fetchSearchHistory();     \r\n         \r\n    },[term]);\r\n\r\n    \r\n\r\n    \r\n\r\n    const trial =(obj)=>{\r\n        setTerm(obj);\r\n        onSubmit(obj);\r\n        addSearch(obj);\r\n\r\n    }\r\n\r\n    const addSearch = async(obj) => {  \r\n            \r\n        moviesRef.add({term:obj,created: new Date()})\r\n                \r\n    };\r\n\r\n  const getSearchHistory =async ()=>{\r\n    var terms=[];\r\n    const querySnapshot=await moviesRef.orderBy(\"created\",\"desc\").limit(5).get();\r\n        querySnapshot.forEach((doc) => {\r\n            terms=[...terms,doc.data().term]\r\n            \r\n        });\r\n        setSearchHistory(terms)\r\n    \r\n  }\r\n\r\n   \r\n    return(\r\n        <div>\r\n        <div className=\"ui segment\">\r\n            <form onSubmit={onFormSubmit} className=\"ui form\">\r\n                <div className=\"field\">\r\n                    <label>Movie Search</label>\r\n                    <input \r\n                    type=\"text\" \r\n                    value={term} \r\n                    onChange={e => setTerm( e.target.value)}\r\n                    />\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n         <SearchList searchHistory={searchHistory} Quicksearch={(obj)=>trial(obj)}/>\r\n        \r\n        </div>\r\n       \r\n        \r\n        );\r\n};\r\n\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Header.css';\r\nconst Header =()=>{\r\n    const history = useHistory();\r\n\r\n    const gotoSearch =()=>{\r\n        history.push('/search')\r\n    }\r\n    const gotoPlaying =()=>{\r\n        history.push('/')\r\n    }\r\n    return(\r\n        <div className=\"rectangle\">\r\n            <a className=\"headerSearch\" onClick={gotoSearch} >Search</a>\r\n            <a className=\"headerPlay\" onClick={gotoPlaying} >Playing Now</a>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nconst Spinner =()=>{\r\n\r\nreturn(\r\n    <div className=\"ui segment\">\r\n        <div className=\"ui active inverted dimmer\">\r\n             <div className=\"ui large text loader\">Loading</div>\r\n        </div>\r\n        <p></p>\r\n</div>\r\n\r\n);\r\n};\r\nexport default Spinner;","import React, { useEffect, useState, useHistory } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Popup from \"./Popup\";\r\nimport Spinner from \"./Spinner\";\r\nimport movieDB from \"./api/the-movie-db\";\r\nconst App = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchMovies, setSearchMovies] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await movieDB.get(\"/movie/now_playing\");\r\n      setMovies(response.data.results.slice(0, 5));\r\n      const genresResponse = await movieDB.get(\"/genre/movie/list\");\r\n      setGenres(genresResponse.data.genres);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onSearchSubmit = async (term) => {\r\n    const response = await movieDB.get(\"/search/movie\", {\r\n      params: { query: term },\r\n    });\r\n    setSearchMovies(response.data.results);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <h1>Playing Now</h1>\r\n            {movies.length === 0 || genres.length == 0 ? (\r\n              <Spinner />\r\n            ) : (\r\n              <MovieList movies={movies} genreList={genres} playNow={true} />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/search\">\r\n            <SearchBar onSubmit={onSearchSubmit} />\r\n            <MovieList\r\n              movies={searchMovies}\r\n              genreList={genres}\r\n              playNow={false}\r\n            />\r\n          </Route>\r\n\r\n          <Route\r\n            path=\"/movie/:id\"\r\n            render={({ match }) =>\r\n              movies.length === 0 ? (\r\n                <Spinner />\r\n              ) : (\r\n                <Popup movieID={match.params.id} fullscreenpopup={true} />\r\n              )\r\n            }\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />,document.querySelector('#root'))"],"sourceRoot":""}